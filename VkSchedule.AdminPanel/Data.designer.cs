#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VkSchedule.AdminPanel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VkSchedule")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Inserttbl_Lessons(tbl_Lessons instance);
    partial void Updatetbl_Lessons(tbl_Lessons instance);
    partial void Deletetbl_Lessons(tbl_Lessons instance);
    partial void Inserttbl_Teachers(tbl_Teachers instance);
    partial void Updatetbl_Teachers(tbl_Teachers instance);
    partial void Deletetbl_Teachers(tbl_Teachers instance);
    partial void Insertref_NamesOfLessons(ref_NamesOfLessons instance);
    partial void Updateref_NamesOfLessons(ref_NamesOfLessons instance);
    partial void Deleteref_NamesOfLessons(ref_NamesOfLessons instance);
    #endregion
		
		public DataDataContext() : 
				base(global::VkSchedule.AdminPanel.Properties.Settings.Default.VkScheduleConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Lessons> tbl_Lessons
		{
			get
			{
				return this.GetTable<tbl_Lessons>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Teachers> tbl_Teachers
		{
			get
			{
				return this.GetTable<tbl_Teachers>();
			}
		}
		
		public System.Data.Linq.Table<ref_NamesOfLessons> ref_NamesOfLessons
		{
			get
			{
				return this.GetTable<ref_NamesOfLessons>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Lessons")]
	public partial class tbl_Lessons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateFrom;
		
		private System.DateTime _DateTo;
		
		private int _Number;
		
		private string _TypeOfLesson;
		
		private int _TeacherId;
		
		private int _LessonNameId;
		
		private string _Classroom;
		
		private string _DayOfWeek;
		
		private bool _IsActive;
		
		private EntityRef<tbl_Teachers> _tbl_Teachers;
		
		private EntityRef<ref_NamesOfLessons> _ref_NamesOfLessons;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateFromChanging(System.DateTime value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.DateTime value);
    partial void OnDateToChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnTypeOfLessonChanging(string value);
    partial void OnTypeOfLessonChanged();
    partial void OnTeacherIdChanging(int value);
    partial void OnTeacherIdChanged();
    partial void OnLessonNameIdChanging(int value);
    partial void OnLessonNameIdChanged();
    partial void OnClassroomChanging(string value);
    partial void OnClassroomChanged();
    partial void OnDayOfWeekChanging(string value);
    partial void OnDayOfWeekChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tbl_Lessons()
		{
			this._tbl_Teachers = default(EntityRef<tbl_Teachers>);
			this._ref_NamesOfLessons = default(EntityRef<ref_NamesOfLessons>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="Date NOT NULL")]
		public System.DateTime DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="Date NOT NULL")]
		public System.DateTime DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfLesson", DbType="NVarChar(20)")]
		public string TypeOfLesson
		{
			get
			{
				return this._TypeOfLesson;
			}
			set
			{
				if ((this._TypeOfLesson != value))
				{
					this.OnTypeOfLessonChanging(value);
					this.SendPropertyChanging();
					this._TypeOfLesson = value;
					this.SendPropertyChanged("TypeOfLesson");
					this.OnTypeOfLessonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", DbType="Int NOT NULL")]
		public int TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					if (this._tbl_Teachers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonNameId", DbType="Int NOT NULL")]
		public int LessonNameId
		{
			get
			{
				return this._LessonNameId;
			}
			set
			{
				if ((this._LessonNameId != value))
				{
					if (this._ref_NamesOfLessons.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLessonNameIdChanging(value);
					this.SendPropertyChanging();
					this._LessonNameId = value;
					this.SendPropertyChanged("LessonNameId");
					this.OnLessonNameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classroom", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Classroom
		{
			get
			{
				return this._Classroom;
			}
			set
			{
				if ((this._Classroom != value))
				{
					this.OnClassroomChanging(value);
					this.SendPropertyChanging();
					this._Classroom = value;
					this.SendPropertyChanged("Classroom");
					this.OnClassroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Teachers_tbl_Lessons", Storage="_tbl_Teachers", ThisKey="TeacherId", OtherKey="Id", IsForeignKey=true)]
		public tbl_Teachers tbl_Teachers
		{
			get
			{
				return this._tbl_Teachers.Entity;
			}
			set
			{
				tbl_Teachers previousValue = this._tbl_Teachers.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Teachers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Teachers.Entity = null;
						previousValue.tbl_Lessons.Remove(this);
					}
					this._tbl_Teachers.Entity = value;
					if ((value != null))
					{
						value.tbl_Lessons.Add(this);
						this._TeacherId = value.Id;
					}
					else
					{
						this._TeacherId = default(int);
					}
					this.SendPropertyChanged("tbl_Teachers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ref_NamesOfLessons_tbl_Lessons", Storage="_ref_NamesOfLessons", ThisKey="LessonNameId", OtherKey="Id", IsForeignKey=true)]
		public ref_NamesOfLessons ref_NamesOfLessons
		{
			get
			{
				return this._ref_NamesOfLessons.Entity;
			}
			set
			{
				ref_NamesOfLessons previousValue = this._ref_NamesOfLessons.Entity;
				if (((previousValue != value) 
							|| (this._ref_NamesOfLessons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ref_NamesOfLessons.Entity = null;
						previousValue.tbl_Lessons.Remove(this);
					}
					this._ref_NamesOfLessons.Entity = value;
					if ((value != null))
					{
						value.tbl_Lessons.Add(this);
						this._LessonNameId = value.Id;
					}
					else
					{
						this._LessonNameId = default(int);
					}
					this.SendPropertyChanged("ref_NamesOfLessons");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Teachers")]
	public partial class tbl_Teachers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _FullName;
		
		private string _Rank;
		
		private string _Chair;
		
		private bool _IsReal;
		
		private EntitySet<tbl_Lessons> _tbl_Lessons;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnRankChanging(string value);
    partial void OnRankChanged();
    partial void OnChairChanging(string value);
    partial void OnChairChanged();
    partial void OnIsRealChanging(bool value);
    partial void OnIsRealChanged();
    #endregion
		
		public tbl_Teachers()
		{
			this._tbl_Lessons = new EntitySet<tbl_Lessons>(new Action<tbl_Lessons>(this.attach_tbl_Lessons), new Action<tbl_Lessons>(this.detach_tbl_Lessons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="NVarChar(30)")]
		public string Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chair", DbType="NVarChar(50)")]
		public string Chair
		{
			get
			{
				return this._Chair;
			}
			set
			{
				if ((this._Chair != value))
				{
					this.OnChairChanging(value);
					this.SendPropertyChanging();
					this._Chair = value;
					this.SendPropertyChanged("Chair");
					this.OnChairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReal", DbType="Bit NOT NULL")]
		public bool IsReal
		{
			get
			{
				return this._IsReal;
			}
			set
			{
				if ((this._IsReal != value))
				{
					this.OnIsRealChanging(value);
					this.SendPropertyChanging();
					this._IsReal = value;
					this.SendPropertyChanged("IsReal");
					this.OnIsRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Teachers_tbl_Lessons", Storage="_tbl_Lessons", ThisKey="Id", OtherKey="TeacherId")]
		public EntitySet<tbl_Lessons> tbl_Lessons
		{
			get
			{
				return this._tbl_Lessons;
			}
			set
			{
				this._tbl_Lessons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Lessons(tbl_Lessons entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Teachers = this;
		}
		
		private void detach_tbl_Lessons(tbl_Lessons entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Teachers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ref_NamesOfLessons")]
	public partial class ref_NamesOfLessons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private EntitySet<tbl_Lessons> _tbl_Lessons;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ref_NamesOfLessons()
		{
			this._tbl_Lessons = new EntitySet<tbl_Lessons>(new Action<tbl_Lessons>(this.attach_tbl_Lessons), new Action<tbl_Lessons>(this.detach_tbl_Lessons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ref_NamesOfLessons_tbl_Lessons", Storage="_tbl_Lessons", ThisKey="Id", OtherKey="LessonNameId")]
		public EntitySet<tbl_Lessons> tbl_Lessons
		{
			get
			{
				return this._tbl_Lessons;
			}
			set
			{
				this._tbl_Lessons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Lessons(tbl_Lessons entity)
		{
			this.SendPropertyChanging();
			entity.ref_NamesOfLessons = this;
		}
		
		private void detach_tbl_Lessons(tbl_Lessons entity)
		{
			this.SendPropertyChanging();
			entity.ref_NamesOfLessons = null;
		}
	}
}
#pragma warning restore 1591
